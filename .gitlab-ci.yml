stages:
  - deploy

before_script:
  - env
  - uname -a
  - kubectl config use-context kubernetes/cluster/sysf:sysf1

admin:
  stage: deploy
  image:
    name: registry.gitlab.sysf.one/docker/image/helmfile:latest
    entrypoint: [""]
  environment: admin
  script:
    - helmfile --environment admin apply --suppress-secrets


# gitlab:
#   stage: deploy
#   image:
#     name: registry.gitlab.sysf.one/docker/image/helmfile:latest
#     entrypoint: [""]
#   environment: gitlab
#   script:
#     - helmfile --environment gitlab apply --suppress-secrets

ops:
  stage: deploy
  image:
    name: registry.gitlab.sysf.one/docker/image/helmfile:latest
    entrypoint: [""]
  environment: ops
  script:
    - kubectl create namespace ops || true
    - helmfile --environment ops apply --suppress-secrets

env-prd:
 stage: deploy
 image:
    name: registry.gitlab.sysf.one/docker/image/helmfile:latest
    entrypoint: [""]
 environment: prd
 script:
   - kubectl create namespace env-prd || true
   - kubectl label ns env-prd env=true || true
   - export SYS_HELM_NEW="false"
   - kubectl config set-context --current --namespace=env-prd
   - "kubectl get secret sys-env-var-config-prd --namespace=default -o yaml | sed 's/namespace: default/namespace: env-prd/' | sed 's/name: sys-env-var-config-prd/name: sys-env-var-config/' | kubectl apply --namespace=env-prd -f - || true"
   - helmfile --file applications/env/helmfile.yaml --environment prd apply --suppress-secrets

# env-stg:
#  stage: deploy
#  image:
#     name: registry.gitlab.sysf.one/docker/image/helmfile:latest
#     entrypoint: [""]
#  environment: stg
#  script:
#    - kubectl create namespace env-stg || true
#    - kubectl label ns env-stg env=true || true
#    - export SYS_HELM_NEW="false"
#    - kubectl config set-context --current --namespace=env-stg
#    - "kubectl get secret sys-env-var-config-stg --namespace=default -o yaml | sed 's/namespace: default/namespace: env-stg/' | sed 's/name: sys-env-var-config-stg/name: sys-env-var-config/' | kubectl apply --namespace=env-stg -f - || true"
#    - helmfile --file applications/env/helmfile.yaml --environment stg apply --suppress-secrets

# env-dev:
#  stage: deploy
#  image:
#     name: registry.gitlab.sysf.one/docker/image/helmfile:latest
#     entrypoint: [""]
#  environment: dev
#  script:
#    - kubectl create namespace env-dev || true
#    - kubectl label ns env-dev env=true || true
#    - export SYS_HELM_NEW="true"
#    - kubectl config set-context --current --namespace=env-dev
#    - "kubectl get secret sys-env-var-config-dev --namespace=default -o yaml | sed 's/namespace: default/namespace: env-dev/' | sed 's/name: sys-env-var-config-dev/name: sys-env-var-config/' | kubectl apply --namespace=env-dev -f - || true"
#    - helmfile --file applications/env/helmfile.yaml --environment dev apply --suppress-secrets

env-ide1:
 stage: deploy
 image:
    name: registry.gitlab.sysf.one/docker/image/helmfile:latest
    entrypoint: [""]
 environment: ide1
 script:
   - export SYS_HELM_NAMESPACE_SUFFIX=ide1
   - export SYS_HELM_NEW="false"
   - kubectl create namespace env-ide1 || true
   - kubectl label ns env-ide1 env=true || true
   - kubectl config set-context --current --namespace=env-ide1
   - "kubectl get secret sys-env-var-config-ide --namespace=default -o yaml | sed 's/namespace: default/namespace: env-ide1/' | sed 's/name: sys-env-var-config-ide/name: sys-env-var-config/' | kubectl apply --namespace=env-ide1 -f - || true"
   - helmfile --file applications/env/helmfile.yaml --environment ide apply --suppress-secrets

# env-cid1:
#  stage: deploy
#  image:
#     name: registry.gitlab.sysf.one/docker/image/helmfile:latest
#     entrypoint: [""]
#  environment: cid1
#  script:
#    - export SYS_HELM_NAMESPACE_SUFFIX=cid1
#    - export SYS_HELM_NEW="false"
#    - kubectl create namespace env-cid1 || true
#    - kubectl label ns env-cid1 env=true || true
#    - kubectl config set-context --current --namespace=env-cid1
#    - "kubectl get secret sys-env-var-config-ide --namespace=default -o yaml | sed 's/namespace: default/namespace: env-cid1/' | sed 's/name: sys-env-var-config-ide/name: sys-env-var-config/' | kubectl apply --namespace=env-cid1 -f - || true"
#    - helmfile --file applications/env/helmfile.yaml --environment ide apply --suppress-secrets

# env-cid2:
#  stage: deploy
#  image:
#     name: registry.gitlab.sysf.one/docker/image/helmfile:latest
#     entrypoint: [""]
#  environment: cid2
#  script:
#    - export SYS_HELM_NAMESPACE_SUFFIX=cid2
#    - export SYS_HELM_NEW="false"
#    - kubectl create namespace env-cid2 || true
#    - kubectl label ns env-cid2 env=true || true
#    - kubectl config set-context --current --namespace=env-cid2
#    - "kubectl get secret sys-env-var-config-ide --namespace=default -o yaml | sed 's/namespace: default/namespace: env-cid2/' | sed 's/name: sys-env-var-config-ide/name: sys-env-var-config/' | kubectl apply --namespace=env-cid2 -f - || true"
#    - helmfile --file applications/env/helmfile.yaml --environment ide apply --suppress-secrets
